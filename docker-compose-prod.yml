version: '3.6'
volumes:
  phame_data: {}
  postgres_data_local: {}
  postgres_backup_local: {}

services:

  nginx:
    build:
      context: ./services/nginx
      dockerfile: Dockerfile-dev
    restart: always
    ports:
      - 80:80
    depends_on:
      - phame

 # flask app that calls shell script that runs phame
  phame-app:
    build:
      context: ./services/phame-app
      dockerfile: Dockerfile
    depends_on:
      - redis
    expose:
      - 5001
    volumes:
      - phame_data:/phame_api/media
      - /vol_d/api/uploads:/api/static/uploads

  # flask-based API
  phame:
    build:
      context: ./services/phame
      dockerfile: Dockerfile-prod
    volumes:
      - phame_data:/phame_api/media
      - /vol_d/api/uploads:/api/static/uploads
    expose:
      - 5000
    env_file:
      - ./.envs/.local/.postgres
      - ./.envs/.local/.email
    environment:
      - FLASK_ENV=development
      - FLASK_APP=project/__init__.py
      - APP_SETTINGS=project.config.ProductionConfig
      - DATABASE_URL=postgres://debug:debug@phame-db:5432/phame_api01
      - DATABASE_TEST_URL=postgres://debug:debug@phame-db:5432/phame-app_db-test
    depends_on:
      - phame-db

  phame-db:
    build:
      context: ./services/phame/project/db
      dockerfile: Dockerfile
    volumes:
      - postgres_data_local:/var/lib/postgresql/data
      - postgres_backup_local:/backups
    ports:
    - 5435:5432
    environment:
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  monitor:
    build:
      context: ./services/celery-queue
      dockerfile: Dockerfile
    ports:
     - "5555:5555"
    entrypoint: flower
    command:  -A tasks --port=5555 --broker=redis://redis:6379/0
    depends_on:
      - redis

  redis:
    image: redis
